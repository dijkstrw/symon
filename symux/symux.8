.\"  -*- nroff -*-
.\"
.\" Copyright (c) 2001-2002 Willem Dijkstra
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\"    - Redistributions of source code must retain the above copyright
.\"      notice, this list of conditions and the following disclaimer.
.\"    - Redistributions in binary form must reproduce the above
.\"      copyright notice, this list of conditions and the following
.\"      disclaimer in the documentation and/or other materials provided
.\"      with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
.\" FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
.\" COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\" 
.Dd April 5, 2002
.Dt MONMUX 8
.Os
.Sh NAME
.Nm monmux
.Nd mon stream multiplexer
.Sh SYNOPSIS
.Nm 
.Op Fl vd
.Pp
.Sh DESCRIPTION
.Xr mon 8
is a lightweight system monitor that measures cpu, memory, interface and disk statistics every 5 seconds. This information is then spooled to   
.Nm
for further processing. 
.Pp
.Xr mon 8
has been designed to inflict minimal performance and security impact on the system it monitors. 
.Nm
has performance impact proportional to the amount of streams it needs to manage. Ideally it should live on a different system and collect data from several 
.Xr mon 8
instances in a LAN.
.Nm 
currently only stores the incoming streams in .rrd files; future versions will also allow other programs to attach to monmux and use the incoming monitor data.

The options:
.Bl -tag -width Ds
.It Fl a
Show version information.
.It Fl d
Stop 
.Nm
from becoming a daemon and show debug information on stdout.

.Sh CONFIGURATION
.Nm
obtains configuration data from 
.Ar /etc/monmux.conf .
The configuration file contains one mux stanza that defines on what interface and port
.Nm 
should listen to for incoming monitored data. There is a source section for
every host that is to be monitored. The source section defines what data to
accept and where to write that data to. Whitespace, newlines and text behind '#' are ignored. The format in BNF:
.Pp
.nf
statement         = mux-statement | source-statement
mux-statement     = "mux" host [ port ]
host              = ip4addr | hostname
port              = [ "port" | ":" | "," ] portnumber
source-statement  = "source" host "{" action-list "}"
action-list       = accept-statement | write-statement
accept-statement  = "accept" "{" resources "}"
resources         = resource ["(" argument ")"] [ ","|" " resources ]
resource          = "cpu" | "mem" | "if" | "io"
argument          = number | interfacename | diskname
write-statement   = "write" resource "in" filename
.fi
.Sh EXAMPLE
Here is an example 
.Ar monmux.conf
that listens to port 2100 on lo0, and accepts cpu, memory, interfaces xl0/de0/lo0/wi0, disks wd[0-3]/cd[0-1] streams from a 
.Xr mon 8
on localhost. 
.Pp
.nf
mux 127.0.0.1:2100
source 127.0.0.1 {
	accept { cpu(0), mem, if(xl0), if(de0),
	         if(lo0), if(wi0), io(wd0), io(wd1), io(wd2), 
                 io(wd3), io(cd0), io(cd1) }

	write cpu(0)   in "/export/mon/localhost/cpu0.rrd"
	write mem      in "/export/mon/localhost/mem.rrd"

	write if(xl0)  in "/export/mon/localhost/if_xl0.rrd"
	write if(de0)  in "/export/mon/localhost/if_de0.rrd"
	write if(lo0)  in "/export/mon/localhost/if_lo0.rrd"
	write if(wi0)  in "/export/mon/localhost/if_wi0.rrd"
	
	write io(wd0)  in "/export/mon/localhost/io_wd0.rrd"
	write io(wd1)  in "/export/mon/localhost/io_wd1.rrd"
	write io(wd2)  in "/export/mon/localhost/io_wd2.rrd"
	write io(wd3)  in "/export/mon/localhost/io_wd3.rrd"

	write io(cd0)  in "/export/mon/localhost/io_cd0.rrd"
	write io(cd1)  in "/export/mon/localhost/io_cd1.rrd"
}
.fi
.Sh SIGNALS
.Bl -tag -width Ds
.It SIGHUP
Causes
.Nm
to read 
.Ar /etc/monmux.conf .
.Nm
will keep the old configuration if errors occured during parsing of the configuration file.
.Sh BUGS
.Nm 
does not yet support exporting monitored information to other programs.
.Sh AUTHOR
Willem Dijkstra <wpd@xs4all.nl>
.Sh SEE ALSO
.Xr mon 8 
 